//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("AppSystemModel", "FK_Logs_Actions", "Actions", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SystemDB.Actions), "Logs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SystemDB.Logs), true)]
[assembly: EdmRelationshipAttribute("AppSystemModel", "FK_Logs_Functions", "Functions", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SystemDB.Functions), "Logs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SystemDB.Logs), true)]
[assembly: EdmRelationshipAttribute("AppSystemModel", "FK_Logs_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SystemDB.User), "Logs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SystemDB.Logs), true)]
[assembly: EdmRelationshipAttribute("AppSystemModel", "FK_UserExt_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SystemDB.User), "UserExt", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SystemDB.UserExt), true)]
[assembly: EdmRelationshipAttribute("AppSystemModel", "UserRoleRefRoleId", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SystemDB.Role), "UserRoleRef", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SystemDB.UserRoleRef), true)]
[assembly: EdmRelationshipAttribute("AppSystemModel", "UserRoleRefUserId", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SystemDB.User), "UserRoleRef", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SystemDB.UserRoleRef), true)]
[assembly: EdmRelationshipAttribute("AppSystemModel", "FK_RolePermissions_Actions", "Actions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SystemDB.Actions), "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SystemDB.Permission), true)]
[assembly: EdmRelationshipAttribute("AppSystemModel", "FK_RolePermissions_Functions", "Functions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SystemDB.Functions), "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SystemDB.Permission), true)]
[assembly: EdmRelationshipAttribute("AppSystemModel", "FK__Permissions__iId__2B3F6F97", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SystemDB.Role), "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SystemDB.Permission), true)]
[assembly: EdmRelationshipAttribute("AppSystemModel", "FK__Permissions__iId__2C3393D0", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SystemDB.User), "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SystemDB.Permission), true)]
[assembly: EdmRelationshipAttribute("AppSystemModel", "UGRgroupId", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SystemDB.Group), "UserGroupRef", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SystemDB.UserGroupRef), true)]

#endregion


namespace SystemDB
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class AppSystemEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“AppSystemEntities”部分中的连接字符串初始化新 AppSystemEntities 对象。
        /// </summary>
        public AppSystemEntities() : base("name=AppSystemEntities", "AppSystemEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 AppSystemEntities 对象。
        /// </summary>
        public AppSystemEntities(string connectionString) : base(connectionString, "AppSystemEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 AppSystemEntities 对象。
        /// </summary>
        public AppSystemEntities(EntityConnection connection) : base(connection, "AppSystemEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Actions> Actions
        {
            get
            {
                if ((_Actions == null))
                {
                    _Actions = base.CreateObjectSet<Actions>("Actions");
                }
                return _Actions;
            }
        }
        private ObjectSet<Actions> _Actions;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Functions> Functions
        {
            get
            {
                if ((_Functions == null))
                {
                    _Functions = base.CreateObjectSet<Functions>("Functions");
                }
                return _Functions;
            }
        }
        private ObjectSet<Functions> _Functions;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Logs> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Logs>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Logs> _Logs;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserExt> UserExt
        {
            get
            {
                if ((_UserExt == null))
                {
                    _UserExt = base.CreateObjectSet<UserExt>("UserExt");
                }
                return _UserExt;
            }
        }
        private ObjectSet<UserExt> _UserExt;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserRoleRef> UserRoleRefs
        {
            get
            {
                if ((_UserRoleRefs == null))
                {
                    _UserRoleRefs = base.CreateObjectSet<UserRoleRef>("UserRoleRefs");
                }
                return _UserRoleRefs;
            }
        }
        private ObjectSet<UserRoleRef> _UserRoleRefs;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Permission> Permissions
        {
            get
            {
                if ((_Permissions == null))
                {
                    _Permissions = base.CreateObjectSet<Permission>("Permissions");
                }
                return _Permissions;
            }
        }
        private ObjectSet<Permission> _Permissions;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserGroupRef> UserGroupRefs
        {
            get
            {
                if ((_UserGroupRefs == null))
                {
                    _UserGroupRefs = base.CreateObjectSet<UserGroupRef>("UserGroupRefs");
                }
                return _UserGroupRefs;
            }
        }
        private ObjectSet<UserGroupRef> _UserGroupRefs;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Lock> Locks
        {
            get
            {
                if ((_Locks == null))
                {
                    _Locks = base.CreateObjectSet<Lock>("Locks");
                }
                return _Locks;
            }
        }
        private ObjectSet<Lock> _Locks;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Actions EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToActions(Actions actions)
        {
            base.AddObject("Actions", actions);
        }
    
        /// <summary>
        /// 用于向 Functions EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToFunctions(Functions functions)
        {
            base.AddObject("Functions", functions);
        }
    
        /// <summary>
        /// 用于向 Logs EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToLogs(Logs logs)
        {
            base.AddObject("Logs", logs);
        }
    
        /// <summary>
        /// 用于向 User EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// 用于向 UserExt EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserExt(UserExt userExt)
        {
            base.AddObject("UserExt", userExt);
        }
    
        /// <summary>
        /// 用于向 Roles EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// 用于向 UserRoleRefs EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserRoleRefs(UserRoleRef userRoleRef)
        {
            base.AddObject("UserRoleRefs", userRoleRef);
        }
    
        /// <summary>
        /// 用于向 Permissions EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPermissions(Permission permission)
        {
            base.AddObject("Permissions", permission);
        }
    
        /// <summary>
        /// 用于向 Groups EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// 用于向 UserGroupRefs EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserGroupRefs(UserGroupRef userGroupRef)
        {
            base.AddObject("UserGroupRefs", userGroupRef);
        }
    
        /// <summary>
        /// 用于向 Locks EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToLocks(Lock @lock)
        {
            base.AddObject("Locks", @lock);
        }
    
        /// <summary>
        /// 用于向 Messages EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }

        #endregion

    }
    

    #endregion

    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AppSystemModel", Name="Actions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Actions : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Actions 对象。
        /// </summary>
        /// <param name="iActionId">iActionId 属性的初始值。</param>
        /// <param name="cActionName">cActionName 属性的初始值。</param>
        public static Actions CreateActions(global::System.Int32 iActionId, global::System.String cActionName)
        {
            Actions actions = new Actions();
            actions.iActionId = iActionId;
            actions.cActionName = cActionName;
            return actions;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 iActionId
        {
            get
            {
                return _iActionId;
            }
            set
            {
                if (_iActionId != value)
                {
                    OniActionIdChanging(value);
                    ReportPropertyChanging("iActionId");
                    _iActionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("iActionId");
                    OniActionIdChanged();
                }
            }
        }
        private global::System.Int32 _iActionId;
        partial void OniActionIdChanging(global::System.Int32 value);
        partial void OniActionIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cActionName
        {
            get
            {
                return _cActionName;
            }
            set
            {
                OncActionNameChanging(value);
                ReportPropertyChanging("cActionName");
                _cActionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cActionName");
                OncActionNameChanged();
            }
        }
        private global::System.String _cActionName;
        partial void OncActionNameChanging(global::System.String value);
        partial void OncActionNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cActionDescription
        {
            get
            {
                return _cActionDescription;
            }
            set
            {
                OncActionDescriptionChanging(value);
                ReportPropertyChanging("cActionDescription");
                _cActionDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cActionDescription");
                OncActionDescriptionChanged();
            }
        }
        private global::System.String _cActionDescription;
        partial void OncActionDescriptionChanging(global::System.String value);
        partial void OncActionDescriptionChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "FK_Logs_Actions", "Logs")]
        public EntityCollection<Logs> Logs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Logs>("AppSystemModel.FK_Logs_Actions", "Logs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Logs>("AppSystemModel.FK_Logs_Actions", "Logs", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "FK_RolePermissions_Actions", "Permission")]
        public EntityCollection<Permission> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("AppSystemModel.FK_RolePermissions_Actions", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("AppSystemModel.FK_RolePermissions_Actions", "Permission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AppSystemModel", Name="Functions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Functions : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Functions 对象。
        /// </summary>
        /// <param name="iFunctionId">iFunctionId 属性的初始值。</param>
        /// <param name="cFunctionLevel">cFunctionLevel 属性的初始值。</param>
        /// <param name="cFunctionName">cFunctionName 属性的初始值。</param>
        /// <param name="bLog">bLog 属性的初始值。</param>
        public static Functions CreateFunctions(global::System.Int32 iFunctionId, global::System.String cFunctionLevel, global::System.String cFunctionName, global::System.Boolean bLog)
        {
            Functions functions = new Functions();
            functions.iFunctionId = iFunctionId;
            functions.cFunctionLevel = cFunctionLevel;
            functions.cFunctionName = cFunctionName;
            functions.bLog = bLog;
            return functions;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 iFunctionId
        {
            get
            {
                return _iFunctionId;
            }
            set
            {
                if (_iFunctionId != value)
                {
                    OniFunctionIdChanging(value);
                    ReportPropertyChanging("iFunctionId");
                    _iFunctionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("iFunctionId");
                    OniFunctionIdChanged();
                }
            }
        }
        private global::System.Int32 _iFunctionId;
        partial void OniFunctionIdChanging(global::System.Int32 value);
        partial void OniFunctionIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cFunctionLevel
        {
            get
            {
                return _cFunctionLevel;
            }
            set
            {
                OncFunctionLevelChanging(value);
                ReportPropertyChanging("cFunctionLevel");
                _cFunctionLevel = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cFunctionLevel");
                OncFunctionLevelChanged();
            }
        }
        private global::System.String _cFunctionLevel;
        partial void OncFunctionLevelChanging(global::System.String value);
        partial void OncFunctionLevelChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cFunctionName
        {
            get
            {
                return _cFunctionName;
            }
            set
            {
                OncFunctionNameChanging(value);
                ReportPropertyChanging("cFunctionName");
                _cFunctionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cFunctionName");
                OncFunctionNameChanged();
            }
        }
        private global::System.String _cFunctionName;
        partial void OncFunctionNameChanging(global::System.String value);
        partial void OncFunctionNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cFunctionDescription
        {
            get
            {
                return _cFunctionDescription;
            }
            set
            {
                OncFunctionDescriptionChanging(value);
                ReportPropertyChanging("cFunctionDescription");
                _cFunctionDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cFunctionDescription");
                OncFunctionDescriptionChanged();
            }
        }
        private global::System.String _cFunctionDescription;
        partial void OncFunctionDescriptionChanging(global::System.String value);
        partial void OncFunctionDescriptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cFunctionCommandGo
        {
            get
            {
                return _cFunctionCommandGo;
            }
            set
            {
                OncFunctionCommandGoChanging(value);
                ReportPropertyChanging("cFunctionCommandGo");
                _cFunctionCommandGo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cFunctionCommandGo");
                OncFunctionCommandGoChanged();
            }
        }
        private global::System.String _cFunctionCommandGo;
        partial void OncFunctionCommandGoChanging(global::System.String value);
        partial void OncFunctionCommandGoChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean bLog
        {
            get
            {
                return _bLog;
            }
            set
            {
                OnbLogChanging(value);
                ReportPropertyChanging("bLog");
                _bLog = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("bLog");
                OnbLogChanged();
            }
        }
        private global::System.Boolean _bLog;
        partial void OnbLogChanging(global::System.Boolean value);
        partial void OnbLogChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "FK_Logs_Functions", "Logs")]
        public EntityCollection<Logs> Logs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Logs>("AppSystemModel.FK_Logs_Functions", "Logs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Logs>("AppSystemModel.FK_Logs_Functions", "Logs", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "FK_RolePermissions_Functions", "Permission")]
        public EntityCollection<Permission> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("AppSystemModel.FK_RolePermissions_Functions", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("AppSystemModel.FK_RolePermissions_Functions", "Permission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AppSystemModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Group 对象。
        /// </summary>
        /// <param name="groupid">groupid 属性的初始值。</param>
        public static Group CreateGroup(global::System.Int32 groupid)
        {
            Group group = new Group();
            group.groupid = groupid;
            return group;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 groupid
        {
            get
            {
                return _groupid;
            }
            set
            {
                if (_groupid != value)
                {
                    OngroupidChanging(value);
                    ReportPropertyChanging("groupid");
                    _groupid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("groupid");
                    OngroupidChanged();
                }
            }
        }
        private global::System.Int32 _groupid;
        partial void OngroupidChanging(global::System.Int32 value);
        partial void OngroupidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String groupName
        {
            get
            {
                return _groupName;
            }
            set
            {
                OngroupNameChanging(value);
                ReportPropertyChanging("groupName");
                _groupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("groupName");
                OngroupNameChanged();
            }
        }
        private global::System.String _groupName;
        partial void OngroupNameChanging(global::System.String value);
        partial void OngroupNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String groupDescription
        {
            get
            {
                return _groupDescription;
            }
            set
            {
                OngroupDescriptionChanging(value);
                ReportPropertyChanging("groupDescription");
                _groupDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("groupDescription");
                OngroupDescriptionChanged();
            }
        }
        private global::System.String _groupDescription;
        partial void OngroupDescriptionChanging(global::System.String value);
        partial void OngroupDescriptionChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "UGRgroupId", "UserGroupRef")]
        public EntityCollection<UserGroupRef> UserGroupRefs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserGroupRef>("AppSystemModel.UGRgroupId", "UserGroupRef");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserGroupRef>("AppSystemModel.UGRgroupId", "UserGroupRef", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AppSystemModel", Name="Lock")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lock : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Lock 对象。
        /// </summary>
        /// <param name="autoId">autoId 属性的初始值。</param>
        /// <param name="module">module 属性的初始值。</param>
        public static Lock CreateLock(global::System.Int32 autoId, global::System.String module)
        {
            Lock @lock = new Lock();
            @lock.autoId = autoId;
            @lock.module = module;
            return @lock;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 autoId
        {
            get
            {
                return _autoId;
            }
            set
            {
                if (_autoId != value)
                {
                    OnautoIdChanging(value);
                    ReportPropertyChanging("autoId");
                    _autoId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("autoId");
                    OnautoIdChanged();
                }
            }
        }
        private global::System.Int32 _autoId;
        partial void OnautoIdChanging(global::System.Int32 value);
        partial void OnautoIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String module
        {
            get
            {
                return _module;
            }
            set
            {
                OnmoduleChanging(value);
                ReportPropertyChanging("module");
                _module = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("module");
                OnmoduleChanged();
            }
        }
        private global::System.String _module;
        partial void OnmoduleChanging(global::System.String value);
        partial void OnmoduleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String locker
        {
            get
            {
                return _locker;
            }
            set
            {
                OnlockerChanging(value);
                ReportPropertyChanging("locker");
                _locker = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("locker");
                OnlockerChanged();
            }
        }
        private global::System.String _locker;
        partial void OnlockerChanging(global::System.String value);
        partial void OnlockerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String key
        {
            get
            {
                return _key;
            }
            set
            {
                OnkeyChanging(value);
                ReportPropertyChanging("key");
                _key = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("key");
                OnkeyChanged();
            }
        }
        private global::System.String _key;
        partial void OnkeyChanging(global::System.String value);
        partial void OnkeyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String id
        {
            get
            {
                return _id;
            }
            set
            {
                OnidChanging(value);
                ReportPropertyChanging("id");
                _id = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("id");
                OnidChanged();
            }
        }
        private global::System.String _id;
        partial void OnidChanging(global::System.String value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> createDate
        {
            get
            {
                return _createDate;
            }
            set
            {
                OncreateDateChanging(value);
                ReportPropertyChanging("createDate");
                _createDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("createDate");
                OncreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _createDate;
        partial void OncreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OncreateDateChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AppSystemModel", Name="Logs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Logs : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Logs 对象。
        /// </summary>
        /// <param name="iLogId">iLogId 属性的初始值。</param>
        /// <param name="dLogDate">dLogDate 属性的初始值。</param>
        public static Logs CreateLogs(global::System.Int32 iLogId, global::System.DateTime dLogDate)
        {
            Logs logs = new Logs();
            logs.iLogId = iLogId;
            logs.dLogDate = dLogDate;
            return logs;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 iLogId
        {
            get
            {
                return _iLogId;
            }
            set
            {
                if (_iLogId != value)
                {
                    OniLogIdChanging(value);
                    ReportPropertyChanging("iLogId");
                    _iLogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("iLogId");
                    OniLogIdChanged();
                }
            }
        }
        private global::System.Int32 _iLogId;
        partial void OniLogIdChanging(global::System.Int32 value);
        partial void OniLogIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime dLogDate
        {
            get
            {
                return _dLogDate;
            }
            set
            {
                OndLogDateChanging(value);
                ReportPropertyChanging("dLogDate");
                _dLogDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dLogDate");
                OndLogDateChanged();
            }
        }
        private global::System.DateTime _dLogDate;
        partial void OndLogDateChanging(global::System.DateTime value);
        partial void OndLogDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> iUserID
        {
            get
            {
                return _iUserID;
            }
            set
            {
                OniUserIDChanging(value);
                ReportPropertyChanging("iUserID");
                _iUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("iUserID");
                OniUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _iUserID;
        partial void OniUserIDChanging(Nullable<global::System.Int32> value);
        partial void OniUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cWorkStation
        {
            get
            {
                return _cWorkStation;
            }
            set
            {
                OncWorkStationChanging(value);
                ReportPropertyChanging("cWorkStation");
                _cWorkStation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cWorkStation");
                OncWorkStationChanged();
            }
        }
        private global::System.String _cWorkStation;
        partial void OncWorkStationChanging(global::System.String value);
        partial void OncWorkStationChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cIP
        {
            get
            {
                return _cIP;
            }
            set
            {
                OncIPChanging(value);
                ReportPropertyChanging("cIP");
                _cIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cIP");
                OncIPChanged();
            }
        }
        private global::System.String _cIP;
        partial void OncIPChanging(global::System.String value);
        partial void OncIPChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> iFunctionId
        {
            get
            {
                return _iFunctionId;
            }
            set
            {
                OniFunctionIdChanging(value);
                ReportPropertyChanging("iFunctionId");
                _iFunctionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("iFunctionId");
                OniFunctionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _iFunctionId;
        partial void OniFunctionIdChanging(Nullable<global::System.Int32> value);
        partial void OniFunctionIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> iActionId
        {
            get
            {
                return _iActionId;
            }
            set
            {
                OniActionIdChanging(value);
                ReportPropertyChanging("iActionId");
                _iActionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("iActionId");
                OniActionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _iActionId;
        partial void OniActionIdChanging(Nullable<global::System.Int32> value);
        partial void OniActionIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cLastValue
        {
            get
            {
                return _cLastValue;
            }
            set
            {
                OncLastValueChanging(value);
                ReportPropertyChanging("cLastValue");
                _cLastValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cLastValue");
                OncLastValueChanged();
            }
        }
        private global::System.String _cLastValue;
        partial void OncLastValueChanging(global::System.String value);
        partial void OncLastValueChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cModule
        {
            get
            {
                return _cModule;
            }
            set
            {
                OncModuleChanging(value);
                ReportPropertyChanging("cModule");
                _cModule = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cModule");
                OncModuleChanged();
            }
        }
        private global::System.String _cModule;
        partial void OncModuleChanging(global::System.String value);
        partial void OncModuleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cFunction
        {
            get
            {
                return _cFunction;
            }
            set
            {
                OncFunctionChanging(value);
                ReportPropertyChanging("cFunction");
                _cFunction = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cFunction");
                OncFunctionChanged();
            }
        }
        private global::System.String _cFunction;
        partial void OncFunctionChanging(global::System.String value);
        partial void OncFunctionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cParams
        {
            get
            {
                return _cParams;
            }
            set
            {
                OncParamsChanging(value);
                ReportPropertyChanging("cParams");
                _cParams = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cParams");
                OncParamsChanged();
            }
        }
        private global::System.String _cParams;
        partial void OncParamsChanging(global::System.String value);
        partial void OncParamsChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cClass
        {
            get
            {
                return _cClass;
            }
            set
            {
                OncClassChanging(value);
                ReportPropertyChanging("cClass");
                _cClass = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cClass");
                OncClassChanged();
            }
        }
        private global::System.String _cClass;
        partial void OncClassChanging(global::System.String value);
        partial void OncClassChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cReturn
        {
            get
            {
                return _cReturn;
            }
            set
            {
                OncReturnChanging(value);
                ReportPropertyChanging("cReturn");
                _cReturn = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cReturn");
                OncReturnChanged();
            }
        }
        private global::System.String _cReturn;
        partial void OncReturnChanging(global::System.String value);
        partial void OncReturnChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cException
        {
            get
            {
                return _cException;
            }
            set
            {
                OncExceptionChanging(value);
                ReportPropertyChanging("cException");
                _cException = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cException");
                OncExceptionChanged();
            }
        }
        private global::System.String _cException;
        partial void OncExceptionChanging(global::System.String value);
        partial void OncExceptionChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cUserName
        {
            get
            {
                return _cUserName;
            }
            set
            {
                OncUserNameChanging(value);
                ReportPropertyChanging("cUserName");
                _cUserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cUserName");
                OncUserNameChanged();
            }
        }
        private global::System.String _cUserName;
        partial void OncUserNameChanging(global::System.String value);
        partial void OncUserNameChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "FK_Logs_Actions", "Actions")]
        public Actions Actions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("AppSystemModel.FK_Logs_Actions", "Actions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("AppSystemModel.FK_Logs_Actions", "Actions").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Actions> ActionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("AppSystemModel.FK_Logs_Actions", "Actions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Actions>("AppSystemModel.FK_Logs_Actions", "Actions", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "FK_Logs_Functions", "Functions")]
        public Functions Functions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Functions>("AppSystemModel.FK_Logs_Functions", "Functions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Functions>("AppSystemModel.FK_Logs_Functions", "Functions").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Functions> FunctionsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Functions>("AppSystemModel.FK_Logs_Functions", "Functions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Functions>("AppSystemModel.FK_Logs_Functions", "Functions", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "FK_Logs_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AppSystemModel.FK_Logs_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AppSystemModel.FK_Logs_User", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AppSystemModel.FK_Logs_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("AppSystemModel.FK_Logs_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AppSystemModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Message 对象。
        /// </summary>
        /// <param name="autoid">autoid 属性的初始值。</param>
        public static Message CreateMessage(global::System.Int32 autoid)
        {
            Message message = new Message();
            message.autoid = autoid;
            return message;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 autoid
        {
            get
            {
                return _autoid;
            }
            set
            {
                if (_autoid != value)
                {
                    OnautoidChanging(value);
                    ReportPropertyChanging("autoid");
                    _autoid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("autoid");
                    OnautoidChanged();
                }
            }
        }
        private global::System.Int32 _autoid;
        partial void OnautoidChanging(global::System.Int32 value);
        partial void OnautoidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String title
        {
            get
            {
                return _title;
            }
            set
            {
                OntitleChanging(value);
                ReportPropertyChanging("title");
                _title = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("title");
                OntitleChanged();
            }
        }
        private global::System.String _title;
        partial void OntitleChanging(global::System.String value);
        partial void OntitleChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String content
        {
            get
            {
                return _content;
            }
            set
            {
                OncontentChanging(value);
                ReportPropertyChanging("content");
                _content = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("content");
                OncontentChanged();
            }
        }
        private global::System.String _content;
        partial void OncontentChanging(global::System.String value);
        partial void OncontentChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sender
        {
            get
            {
                return _sender;
            }
            set
            {
                OnsenderChanging(value);
                ReportPropertyChanging("sender");
                _sender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("sender");
                OnsenderChanged();
            }
        }
        private global::System.String _sender;
        partial void OnsenderChanging(global::System.String value);
        partial void OnsenderChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String receiver
        {
            get
            {
                return _receiver;
            }
            set
            {
                OnreceiverChanging(value);
                ReportPropertyChanging("receiver");
                _receiver = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("receiver");
                OnreceiverChanged();
            }
        }
        private global::System.String _receiver;
        partial void OnreceiverChanging(global::System.String value);
        partial void OnreceiverChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> markRead
        {
            get
            {
                return _markRead;
            }
            set
            {
                OnmarkReadChanging(value);
                ReportPropertyChanging("markRead");
                _markRead = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("markRead");
                OnmarkReadChanged();
            }
        }
        private Nullable<global::System.Boolean> _markRead;
        partial void OnmarkReadChanging(Nullable<global::System.Boolean> value);
        partial void OnmarkReadChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> sendDate
        {
            get
            {
                return _sendDate;
            }
            set
            {
                OnsendDateChanging(value);
                ReportPropertyChanging("sendDate");
                _sendDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sendDate");
                OnsendDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _sendDate;
        partial void OnsendDateChanging(Nullable<global::System.DateTime> value);
        partial void OnsendDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> receivDate
        {
            get
            {
                return _receivDate;
            }
            set
            {
                OnreceivDateChanging(value);
                ReportPropertyChanging("receivDate");
                _receivDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("receivDate");
                OnreceivDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _receivDate;
        partial void OnreceivDateChanging(Nullable<global::System.DateTime> value);
        partial void OnreceivDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contenType
        {
            get
            {
                return _contenType;
            }
            set
            {
                OncontenTypeChanging(value);
                ReportPropertyChanging("contenType");
                _contenType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("contenType");
                OncontenTypeChanged();
            }
        }
        private global::System.String _contenType;
        partial void OncontenTypeChanging(global::System.String value);
        partial void OncontenTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String module
        {
            get
            {
                return _module;
            }
            set
            {
                OnmoduleChanging(value);
                ReportPropertyChanging("module");
                _module = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("module");
                OnmoduleChanged();
            }
        }
        private global::System.String _module;
        partial void OnmoduleChanging(global::System.String value);
        partial void OnmoduleChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AppSystemModel", Name="Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Permission : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Permission 对象。
        /// </summary>
        /// <param name="iPermissionId">iPermissionId 属性的初始值。</param>
        /// <param name="iActionId">iActionId 属性的初始值。</param>
        /// <param name="iFunctionId">iFunctionId 属性的初始值。</param>
        /// <param name="iId">iId 属性的初始值。</param>
        /// <param name="cType">cType 属性的初始值。</param>
        public static Permission CreatePermission(global::System.Int32 iPermissionId, global::System.Int32 iActionId, global::System.Int32 iFunctionId, global::System.Int32 iId, global::System.String cType)
        {
            Permission permission = new Permission();
            permission.iPermissionId = iPermissionId;
            permission.iActionId = iActionId;
            permission.iFunctionId = iFunctionId;
            permission.iId = iId;
            permission.cType = cType;
            return permission;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 iPermissionId
        {
            get
            {
                return _iPermissionId;
            }
            set
            {
                if (_iPermissionId != value)
                {
                    OniPermissionIdChanging(value);
                    ReportPropertyChanging("iPermissionId");
                    _iPermissionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("iPermissionId");
                    OniPermissionIdChanged();
                }
            }
        }
        private global::System.Int32 _iPermissionId;
        partial void OniPermissionIdChanging(global::System.Int32 value);
        partial void OniPermissionIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 iActionId
        {
            get
            {
                return _iActionId;
            }
            set
            {
                OniActionIdChanging(value);
                ReportPropertyChanging("iActionId");
                _iActionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("iActionId");
                OniActionIdChanged();
            }
        }
        private global::System.Int32 _iActionId;
        partial void OniActionIdChanging(global::System.Int32 value);
        partial void OniActionIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 iFunctionId
        {
            get
            {
                return _iFunctionId;
            }
            set
            {
                OniFunctionIdChanging(value);
                ReportPropertyChanging("iFunctionId");
                _iFunctionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("iFunctionId");
                OniFunctionIdChanged();
            }
        }
        private global::System.Int32 _iFunctionId;
        partial void OniFunctionIdChanging(global::System.Int32 value);
        partial void OniFunctionIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 iId
        {
            get
            {
                return _iId;
            }
            set
            {
                OniIdChanging(value);
                ReportPropertyChanging("iId");
                _iId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("iId");
                OniIdChanged();
            }
        }
        private global::System.Int32 _iId;
        partial void OniIdChanging(global::System.Int32 value);
        partial void OniIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cType
        {
            get
            {
                return _cType;
            }
            set
            {
                OncTypeChanging(value);
                ReportPropertyChanging("cType");
                _cType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cType");
                OncTypeChanged();
            }
        }
        private global::System.String _cType;
        partial void OncTypeChanging(global::System.String value);
        partial void OncTypeChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "FK_RolePermissions_Actions", "Actions")]
        public Actions Action
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("AppSystemModel.FK_RolePermissions_Actions", "Actions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("AppSystemModel.FK_RolePermissions_Actions", "Actions").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Actions> ActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Actions>("AppSystemModel.FK_RolePermissions_Actions", "Actions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Actions>("AppSystemModel.FK_RolePermissions_Actions", "Actions", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "FK_RolePermissions_Functions", "Functions")]
        public Functions Function
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Functions>("AppSystemModel.FK_RolePermissions_Functions", "Functions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Functions>("AppSystemModel.FK_RolePermissions_Functions", "Functions").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Functions> FunctionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Functions>("AppSystemModel.FK_RolePermissions_Functions", "Functions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Functions>("AppSystemModel.FK_RolePermissions_Functions", "Functions", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "FK__Permissions__iId__2B3F6F97", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("AppSystemModel.FK__Permissions__iId__2B3F6F97", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("AppSystemModel.FK__Permissions__iId__2B3F6F97", "Role").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("AppSystemModel.FK__Permissions__iId__2B3F6F97", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("AppSystemModel.FK__Permissions__iId__2B3F6F97", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "FK__Permissions__iId__2C3393D0", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AppSystemModel.FK__Permissions__iId__2C3393D0", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AppSystemModel.FK__Permissions__iId__2C3393D0", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AppSystemModel.FK__Permissions__iId__2C3393D0", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("AppSystemModel.FK__Permissions__iId__2C3393D0", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AppSystemModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Role 对象。
        /// </summary>
        /// <param name="iRoleId">iRoleId 属性的初始值。</param>
        /// <param name="cRoleName">cRoleName 属性的初始值。</param>
        public static Role CreateRole(global::System.Int32 iRoleId, global::System.String cRoleName)
        {
            Role role = new Role();
            role.iRoleId = iRoleId;
            role.cRoleName = cRoleName;
            return role;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 iRoleId
        {
            get
            {
                return _iRoleId;
            }
            set
            {
                if (_iRoleId != value)
                {
                    OniRoleIdChanging(value);
                    ReportPropertyChanging("iRoleId");
                    _iRoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("iRoleId");
                    OniRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _iRoleId;
        partial void OniRoleIdChanging(global::System.Int32 value);
        partial void OniRoleIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cRoleName
        {
            get
            {
                return _cRoleName;
            }
            set
            {
                OncRoleNameChanging(value);
                ReportPropertyChanging("cRoleName");
                _cRoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cRoleName");
                OncRoleNameChanged();
            }
        }
        private global::System.String _cRoleName;
        partial void OncRoleNameChanging(global::System.String value);
        partial void OncRoleNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cRoleDescription
        {
            get
            {
                return _cRoleDescription;
            }
            set
            {
                OncRoleDescriptionChanging(value);
                ReportPropertyChanging("cRoleDescription");
                _cRoleDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cRoleDescription");
                OncRoleDescriptionChanged();
            }
        }
        private global::System.String _cRoleDescription;
        partial void OncRoleDescriptionChanging(global::System.String value);
        partial void OncRoleDescriptionChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "UserRoleRefRoleId", "UserRoleRef")]
        public EntityCollection<UserRoleRef> UserRoleRefs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRoleRef>("AppSystemModel.UserRoleRefRoleId", "UserRoleRef");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRoleRef>("AppSystemModel.UserRoleRefRoleId", "UserRoleRef", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "FK__Permissions__iId__2B3F6F97", "Permission")]
        public EntityCollection<Permission> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("AppSystemModel.FK__Permissions__iId__2B3F6F97", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("AppSystemModel.FK__Permissions__iId__2B3F6F97", "Permission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AppSystemModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 User 对象。
        /// </summary>
        /// <param name="iUserId">iUserId 属性的初始值。</param>
        /// <param name="cUserCode">cUserCode 属性的初始值。</param>
        public static User CreateUser(global::System.Int32 iUserId, global::System.String cUserCode)
        {
            User user = new User();
            user.iUserId = iUserId;
            user.cUserCode = cUserCode;
            return user;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 iUserId
        {
            get
            {
                return _iUserId;
            }
            set
            {
                if (_iUserId != value)
                {
                    OniUserIdChanging(value);
                    ReportPropertyChanging("iUserId");
                    _iUserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("iUserId");
                    OniUserIdChanged();
                }
            }
        }
        private global::System.Int32 _iUserId;
        partial void OniUserIdChanging(global::System.Int32 value);
        partial void OniUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String cUserCode
        {
            get
            {
                return _cUserCode;
            }
            set
            {
                OncUserCodeChanging(value);
                ReportPropertyChanging("cUserCode");
                _cUserCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("cUserCode");
                OncUserCodeChanged();
            }
        }
        private global::System.String _cUserCode;
        partial void OncUserCodeChanging(global::System.String value);
        partial void OncUserCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cUserName
        {
            get
            {
                return _cUserName;
            }
            set
            {
                OncUserNameChanging(value);
                ReportPropertyChanging("cUserName");
                _cUserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cUserName");
                OncUserNameChanged();
            }
        }
        private global::System.String _cUserName;
        partial void OncUserNameChanging(global::System.String value);
        partial void OncUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cUserPassWord
        {
            get
            {
                return _cUserPassWord;
            }
            set
            {
                OncUserPassWordChanging(value);
                ReportPropertyChanging("cUserPassWord");
                _cUserPassWord = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cUserPassWord");
                OncUserPassWordChanged();
            }
        }
        private global::System.String _cUserPassWord;
        partial void OncUserPassWordChanging(global::System.String value);
        partial void OncUserPassWordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cUserEMail
        {
            get
            {
                return _cUserEMail;
            }
            set
            {
                OncUserEMailChanging(value);
                ReportPropertyChanging("cUserEMail");
                _cUserEMail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cUserEMail");
                OncUserEMailChanged();
            }
        }
        private global::System.String _cUserEMail;
        partial void OncUserEMailChanging(global::System.String value);
        partial void OncUserEMailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cUserMobile
        {
            get
            {
                return _cUserMobile;
            }
            set
            {
                OncUserMobileChanging(value);
                ReportPropertyChanging("cUserMobile");
                _cUserMobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cUserMobile");
                OncUserMobileChanged();
            }
        }
        private global::System.String _cUserMobile;
        partial void OncUserMobileChanging(global::System.String value);
        partial void OncUserMobileChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "FK_Logs_User", "Logs")]
        public EntityCollection<Logs> Logs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Logs>("AppSystemModel.FK_Logs_User", "Logs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Logs>("AppSystemModel.FK_Logs_User", "Logs", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "FK_UserExt_User", "UserExt")]
        public UserExt UserExt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserExt>("AppSystemModel.FK_UserExt_User", "UserExt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserExt>("AppSystemModel.FK_UserExt_User", "UserExt").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserExt> UserExtReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserExt>("AppSystemModel.FK_UserExt_User", "UserExt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserExt>("AppSystemModel.FK_UserExt_User", "UserExt", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "UserRoleRefUserId", "UserRoleRef")]
        public EntityCollection<UserRoleRef> UserRoleRefs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRoleRef>("AppSystemModel.UserRoleRefUserId", "UserRoleRef");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRoleRef>("AppSystemModel.UserRoleRefUserId", "UserRoleRef", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "FK__Permissions__iId__2C3393D0", "Permission")]
        public EntityCollection<Permission> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("AppSystemModel.FK__Permissions__iId__2C3393D0", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("AppSystemModel.FK__Permissions__iId__2C3393D0", "Permission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AppSystemModel", Name="UserExt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserExt : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserExt 对象。
        /// </summary>
        /// <param name="iUserId">iUserId 属性的初始值。</param>
        public static UserExt CreateUserExt(global::System.Int32 iUserId)
        {
            UserExt userExt = new UserExt();
            userExt.iUserId = iUserId;
            return userExt;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 iUserId
        {
            get
            {
                return _iUserId;
            }
            set
            {
                if (_iUserId != value)
                {
                    OniUserIdChanging(value);
                    ReportPropertyChanging("iUserId");
                    _iUserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("iUserId");
                    OniUserIdChanged();
                }
            }
        }
        private global::System.Int32 _iUserId;
        partial void OniUserIdChanging(global::System.Int32 value);
        partial void OniUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cUserAddress
        {
            get
            {
                return _cUserAddress;
            }
            set
            {
                OncUserAddressChanging(value);
                ReportPropertyChanging("cUserAddress");
                _cUserAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cUserAddress");
                OncUserAddressChanged();
            }
        }
        private global::System.String _cUserAddress;
        partial void OncUserAddressChanging(global::System.String value);
        partial void OncUserAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cUserPhone
        {
            get
            {
                return _cUserPhone;
            }
            set
            {
                OncUserPhoneChanging(value);
                ReportPropertyChanging("cUserPhone");
                _cUserPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cUserPhone");
                OncUserPhoneChanged();
            }
        }
        private global::System.String _cUserPhone;
        partial void OncUserPhoneChanging(global::System.String value);
        partial void OncUserPhoneChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cUserIM
        {
            get
            {
                return _cUserIM;
            }
            set
            {
                OncUserIMChanging(value);
                ReportPropertyChanging("cUserIM");
                _cUserIM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cUserIM");
                OncUserIMChanged();
            }
        }
        private global::System.String _cUserIM;
        partial void OncUserIMChanging(global::System.String value);
        partial void OncUserIMChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cUserMasterPage
        {
            get
            {
                return _cUserMasterPage;
            }
            set
            {
                OncUserMasterPageChanging(value);
                ReportPropertyChanging("cUserMasterPage");
                _cUserMasterPage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cUserMasterPage");
                OncUserMasterPageChanged();
            }
        }
        private global::System.String _cUserMasterPage;
        partial void OncUserMasterPageChanging(global::System.String value);
        partial void OncUserMasterPageChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "FK_UserExt_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AppSystemModel.FK_UserExt_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AppSystemModel.FK_UserExt_User", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AppSystemModel.FK_UserExt_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("AppSystemModel.FK_UserExt_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AppSystemModel", Name="UserGroupRef")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserGroupRef : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserGroupRef 对象。
        /// </summary>
        /// <param name="autoid">autoid 属性的初始值。</param>
        public static UserGroupRef CreateUserGroupRef(global::System.Int32 autoid)
        {
            UserGroupRef userGroupRef = new UserGroupRef();
            userGroupRef.autoid = autoid;
            return userGroupRef;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 autoid
        {
            get
            {
                return _autoid;
            }
            set
            {
                if (_autoid != value)
                {
                    OnautoidChanging(value);
                    ReportPropertyChanging("autoid");
                    _autoid = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("autoid");
                    OnautoidChanged();
                }
            }
        }
        private global::System.Int32 _autoid;
        partial void OnautoidChanging(global::System.Int32 value);
        partial void OnautoidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> groupId
        {
            get
            {
                return _groupId;
            }
            set
            {
                OngroupIdChanging(value);
                ReportPropertyChanging("groupId");
                _groupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("groupId");
                OngroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _groupId;
        partial void OngroupIdChanging(Nullable<global::System.Int32> value);
        partial void OngroupIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isManager
        {
            get
            {
                return _isManager;
            }
            set
            {
                OnisManagerChanging(value);
                ReportPropertyChanging("isManager");
                _isManager = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isManager");
                OnisManagerChanged();
            }
        }
        private Nullable<global::System.Boolean> _isManager;
        partial void OnisManagerChanging(Nullable<global::System.Boolean> value);
        partial void OnisManagerChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "UGRgroupId", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("AppSystemModel.UGRgroupId", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("AppSystemModel.UGRgroupId", "Group").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("AppSystemModel.UGRgroupId", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("AppSystemModel.UGRgroupId", "Group", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AppSystemModel", Name="UserRoleRef")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRoleRef : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserRoleRef 对象。
        /// </summary>
        /// <param name="iRoleId">iRoleId 属性的初始值。</param>
        /// <param name="iUserId">iUserId 属性的初始值。</param>
        /// <param name="iURRefId">iURRefId 属性的初始值。</param>
        public static UserRoleRef CreateUserRoleRef(global::System.Int32 iRoleId, global::System.Int32 iUserId, global::System.Int32 iURRefId)
        {
            UserRoleRef userRoleRef = new UserRoleRef();
            userRoleRef.iRoleId = iRoleId;
            userRoleRef.iUserId = iUserId;
            userRoleRef.iURRefId = iURRefId;
            return userRoleRef;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 iRoleId
        {
            get
            {
                return _iRoleId;
            }
            set
            {
                OniRoleIdChanging(value);
                ReportPropertyChanging("iRoleId");
                _iRoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("iRoleId");
                OniRoleIdChanged();
            }
        }
        private global::System.Int32 _iRoleId;
        partial void OniRoleIdChanging(global::System.Int32 value);
        partial void OniRoleIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 iUserId
        {
            get
            {
                return _iUserId;
            }
            set
            {
                OniUserIdChanging(value);
                ReportPropertyChanging("iUserId");
                _iUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("iUserId");
                OniUserIdChanged();
            }
        }
        private global::System.Int32 _iUserId;
        partial void OniUserIdChanging(global::System.Int32 value);
        partial void OniUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 iURRefId
        {
            get
            {
                return _iURRefId;
            }
            set
            {
                if (_iURRefId != value)
                {
                    OniURRefIdChanging(value);
                    ReportPropertyChanging("iURRefId");
                    _iURRefId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("iURRefId");
                    OniURRefIdChanged();
                }
            }
        }
        private global::System.Int32 _iURRefId;
        partial void OniURRefIdChanging(global::System.Int32 value);
        partial void OniURRefIdChanged();

        #endregion

    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "UserRoleRefRoleId", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("AppSystemModel.UserRoleRefRoleId", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("AppSystemModel.UserRoleRefRoleId", "Role").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("AppSystemModel.UserRoleRefRoleId", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("AppSystemModel.UserRoleRefRoleId", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AppSystemModel", "UserRoleRefUserId", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AppSystemModel.UserRoleRefUserId", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AppSystemModel.UserRoleRefUserId", "User").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("AppSystemModel.UserRoleRefUserId", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("AppSystemModel.UserRoleRefUserId", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
